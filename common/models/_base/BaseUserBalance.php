<?php

/**
 * This is the model base class for the table "user_balance".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserBalance".
 *
 * Columns in table "user_balance" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $bet_group_id
 * @property string $price
 * @property integer $price_type
 * @property integer $operation_type
 * @property integer $payment_type
 * @property string $message
 * @property integer $update_at
 * @property integer $create_at
 *
 */
abstract class BaseUserBalance extends BaseModel {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_balance';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserBalance|UserBalances', $n);
	}

	public static function representingColumn() {
		return 'price';
	}

	public function rules() {
		return [
			['price_type', 'required'],
			['user_id, bet_group_id, price_type, operation_type, payment_type, update_at, create_at', 'numerical', 'integerOnly'=>true],
			['price', 'length', 'max'=>19],
			['message', 'safe'],
			['user_id, bet_group_id, price, operation_type, payment_type, message, update_at, create_at', 'default', 'setOnEmpty' => true, 'value' => null],
			['id, user_id, bet_group_id, price, price_type, operation_type, payment_type, message, update_at, create_at', 'safe', 'on'=>'search'],
		];
	}

	public function relations() {
		return [
		];
	}

	public function pivotModels() {
		return [
		];
	}

	public function attributeLabels() {
		return [
			'id' => Yii::t('app', 'ID'),
			'user_id' => Yii::t('app', 'User'),
			'bet_group_id' => Yii::t('app', 'Bet Group'),
			'price' => Yii::t('app', 'Price'),
			'price_type' => Yii::t('app', 'Price Type'),
			'operation_type' => Yii::t('app', 'Operation Type'),
			'payment_type' => Yii::t('app', 'Payment Type'),
			'message' => Yii::t('app', 'Message'),
			'update_at' => Yii::t('app', 'Update At'),
			'create_at' => Yii::t('app', 'Create At'),
		];
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('bet_group_id', $this->bet_group_id);
		$criteria->compare('price', $this->price, true);
		$criteria->compare('price_type', $this->price_type);
		$criteria->compare('operation_type', $this->operation_type);
		$criteria->compare('payment_type', $this->payment_type);
		$criteria->compare('message', $this->message, true);
		$criteria->compare('update_at', $this->update_at);
		$criteria->compare('create_at', $this->create_at);

		return new CActiveDataProvider($this, [
			'criteria' => $criteria,
		]);
	}
}